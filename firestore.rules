rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // USERS
    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow read, update, delete: if isSignedIn() &&
        (request.auth.uid == userId || isAdmin());
    }

    // REQUESTS (customer requests)
    match /requests/{requestId} {
      allow create: if isSignedIn();  // allow all authenticated users to create
      allow read, update, delete: if isSignedIn() &&
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    // DRAFTS
    match /drafts/{userId} {
      allow read, write, delete: if isSignedIn() &&
        (request.auth.uid == userId || isAdmin());
    }

    // COMPANIES
    match /companies/{companyId} {
      allow read: if isSignedIn();
      allow write, delete: if isSignedIn() &&
        (request.auth.uid == companyId || isAdmin());
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
